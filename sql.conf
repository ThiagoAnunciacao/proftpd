#
# Proftpd sample configuration for SQL-based authentication.
#
# (This is not to be used if you prefer a PAM-based SQL authentication)
#

<IfModule mod_sql.c>
#
# Choose a SQL backend among MySQL or PostgreSQL.
# Both modules are loaded in default configuration, so you have to specify the backend
# or comment out the unused module in /etc/proftpd/modules.conf.
# Use 'mysql' or 'postgres' as possible values.
#
SQLBackend	mysql
#
#SQLEngine on
#SQLAuthenticate on
#
# Use both a crypted or plaintext password
SQLAuthTypes            PlainText Crypt
SQLAuthenticate         users groups

#
# Use a backend-crypted or a crypted password
#SQLAuthTypes Backend Crypt
#
# Connection
SQLConnectInfo %{env:DATABASE_NAME}@%{env:DATABASE_HOST} %{env:DATABASE_USER} %{env:DATABASE_PASS}
#
# Describes both users/groups tables
#
#SQLUserInfo users userid passwd uid gid homedir shell
SQLUserInfo ftpuser userid passwd uid gid homedir shell

#SQLGroupInfo groups groupname gid members
#
SQLGroupInfo    ftpgroup groupname gid members

# set min UID and GID - otherwise these are 999 each
SQLMinID        500

# SQLDefaultUID         4000 # www-data
# SQLDefaultGID         1000 # www-data

# Update count every time user logs in
SQLLog PASS updatecount
SQLNamedQuery updatecount UPDATE "count=count+1, accessed=now() WHERE userid='%u'" ftpuser

# Update modified everytime user uploads or deletes a file
SQLLog  STOR,DELE modified
SQLNamedQuery modified UPDATE "modified=now() WHERE userid='%u'" ftpuser

SqlLogFile /var/log/proftpd/sql.log

# Other mod_sql configuration here

# Define a SELECT statement to retrieve users' authorized SSH keys
SQLNamedQuery get-user-authorized-keys SELECT "sftpuserkey FROM ftpuser WHERE userid='%U'"

# Define a SELECT statement to retrieve hosts' authorized SSH keys
SQLNamedQuery get-host-authorized-keys SELECT "sftphostkey FROM ftpuser WHERE userid='%U'"
</IfModule>
